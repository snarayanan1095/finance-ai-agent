AWSTemplateFormatVersion: '2010-09-09'
Description: Email Transaction Extractor â€“ Lambda + Schedule
Parameters:
  EmailHost:
    Type: String
  EmailUser:
    Type: String
  EmailPassword:
    Type: String
  OpenAIKey:
    Type: String
Resources:
  TxnTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: transactions
      AttributeDefinitions:
        - AttributeName: txn_id
          AttributeType: S
      KeySchema:
        - AttributeName: txn_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  FetcherFn:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: email-fetcher
      Runtime: python3.12
      Handler: lambda_function.lambda_handler
      Code:
        S3Bucket: <REPLACE_ME_BUCKET>
        S3Key: lambda/email-fetcher.zip
      Timeout: 60
      MemorySize: 512
      Environment:
        Variables:
          EMAIL_HOST: !Ref EmailHost
          EMAIL_USER: !Ref EmailUser
          EMAIL_PASSWORD: !Ref EmailPassword
          DYNAMODB_TABLE: !Ref TxnTable
          OPENAI_API_KEY: !Ref OpenAIKey
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: !GetAtt TxnTable.Arn
  DailyRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(1 day)
      Targets:
        - Arn: !GetAtt FetcherFn.Arn
          Id: FetcherFnTarget
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref FetcherFn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt DailyRule.Arn
